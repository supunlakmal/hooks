 [ ] **Import Adjustments:** Update the imports within the hook's file to reflect its new location.
  - [ ] **Build Check:** Run `npm run build` to check for type errors and code issues. If build fails fix the hook, and run again.
  - [ ] **Index Update:** Add an export statement for the new hook in `src/index.ts`.
  - [ ] **Documentation:** Create a README file for the hook in the `./docs` folder. Name it `use[HookName].md`. (fallow the   documentation_instructions.md instructions)
    - [ ] Include a concise description of the hook's functionality.
    - [ ] Provide usage examples with code snippets.
    - [ ] Explain parameters and return values.
  - [ ] **Commit Preparation:** Stage the changes (new hook file, updated `index.ts`, documentation).
- [ ] **Post-Migration (After Each Hook)**
  - [ ] **Version Increment:** Increment the version number in `package.json` (e.g., "0.5.0" to "0.6.0").
  - [ ] **Commit:** Create a descriptive commit message (e.g., "feat: Migrate useMyHook to src").
  - [ ] **Push:** Push the commit to the remote repository.
- [ ] **Repeat**
  - [ ] Repeat the Hook Migration for all hooks until all are moved.
- [ ] **Final**
  - [ ] Delete the `./new` directory and its contents.
  - [ ] Create a final commit and push.